-- Funk language grammar.

comment "//" ;
comment "/*" "*/" ;

Program.	Prog ::= [Decl] "main" Exp ;

Declaration.	Decl ::= Ident [Ident] "be" Exp ;

EGet.		Exp ::= Ident ;
EApplication.	Exp ::= "(" Ident [Exp] ")" ;
ELet.		Exp ::= "let" Decl "in" Exp ;
ECase.		Exp1 ::= "case" Exp "of" [Patt] ;
EList.		Exp2 ::= "[" [Exp2] "]" ;
EEmptyList.	Exp2 ::= "[]" ;
EInt.		Exp3 ::= Integer ;

Pattern.	Patt ::= Match "->" Exp;

MatchEmpList.	Match ::= "[]" ;
MatchHeadTail.	Match ::=  Ident "::" Ident ;

coercions Exp 3 ;

separator Ident "" ;
separator Decl ";" ;
separator Exp "" ;
separator Exp2 "," ;
separator Patt "|" ;

